def polinomioQuociente(p,b):
    """Devolve a lista que representa o polinômio quociente da divisão
       p(x)/(x-b), onde p(x) é o polinômio cujos coeficientes estão na
       lista p e b é uma raiz de p(x).

       p -- a lista dos coeficientes do polinômio a ser dividido
       b -- a raiz a ser usada como divisor
    """

    # Escreva aqui o corpo da função
    n = (len(p) - 1)
    np = []
    g = 0

    np.append(p[n])
    while n > 0:
        r = np[g] * b + (p[n - 1])
        np.append(r)
        g += 1
        n -= 1
    del(np[g])
    np.reverse()
    print(np)
    return (np)
def polinomioQuocienteRacional(p,b,a):
    r = -1
    n = (len(p) -1)
    #if n > 0:
    nqr = []
    nqr.append(p[n])
    for i in range(n, 0, -1):
        g = ((nqr[len(nqr) - 1]*(b)/a) + p[i - 1])
        print(g)
        nqr.append(g)
    nqr.reverse()
    if len(nqr) == len(p):
        r = nqr[0]
    else:
        r = 0
    del(nqr[0])
    for i in range (len(nqr)):
        nqr[i] = nqr[i] / a
    return(nqr, r)
def polinomioComRaiz(p,b):
    """Devolve True se b é raiz do polinômio representado pela lista p,
       ou False no caso contrário.

       p -- a lista dos coeficientes do polinômio
       b -- o número a ser testado como raiz
    """

    # Escreva aqui o corpo da função
    resultadof = 0
    for t in range (len(p)):
        resultadof = p[t]*b**t + resultadof
    if resultadof == 0:
        return True    #  Ajuste o valor de retorno
    else:
        return False
def main():
#     n = int(input("Digite o grau: "))

#     # Lê os coeficientes do polinômio
#     p = []
#     for i in range(n+1):
#         p.append(float(input("Digite p["+str(i)+"]: ")))
#         i += 1
    
    
    p = [0 , -6, 5, 73, -40 , -296, 80, 400]    #[0, -0.5, -0.5, 0.5, 0.5, 0.4, -0.6]
    #p = [0, 20, 12, -113, -113, 12, 20]         #[0, -1.0, -2.0, -0.5, 2.5, 0.4]
    #p = [10, 23, -20, 3]                         #[2.0, 5.0, -0.3333333333333333]

    divp0 = []
    pqr = []
    posr = []
    divpn = []
    while p[0] == 0:
        pqr.append(0)
        del(p[0])
    n = (len(p) - 1)
    p0 = p[0]
    if p[0] < 0:
        p0 = p[0] * -1
    for d in range(1, (int(p0))+1):
        resul = p0 % d
        if (resul == 0):
            divp0.append(d)
    pn = p[n]
    if p[n] < 0:
        pn = p[n] * -1
    for dd in range(1, (int(pn))+1):
        resul = pn % dd
        if (resul == 0):
            divpn.append(dd)
    for b in divpn:
        for a in divp0:
            divisoes = a / b
            if divisoes not in posr:
                posr.append(-divisoes)
                posr.append(divisoes)
    for m in range(len(posr)):
        h = polinomioQuocienteRacional(p, posr[m], 1)
        if h[1] == 0:
            pqr.append(posr[m])
            dupli = polinomioQuociente(p,posr[m])
            dupli1 = polinomioQuocienteRacional(dupli, posr[m], 1)
            if dupli1[1] == 0:
                pqr.append(posr[m])

    print("Pqr:  ",pqr,"divp0:  ",divp0,"divpn:   ",divpn)
    print("posr:  ",posr)
main()